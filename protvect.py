#! /usr/bin/python\rimport sys, string, math, tracebackSOGLIA = 6.0 #per mettere il link o menoL = 1 #lunghezza vettore di idrofobicita = 2L+1fli = open("disprot_4.5_fastaA.txt", "r")fscale = open("ges-scale.txt", "r")flo = open("prova.txt", "w")#creo il dizionario con la scala di idrofobicitascala = fscale.readlines() #leggo da file la scaladict = {}i=0while i < len(scala):	riga = string.split(scala[i],',')	if len(riga) == 2:		first = str(riga[0])  #lettera		second = float(riga[1]) #numero		dict[first] = round(second,2)		i = i+1	else:		print "Errore nella lettura della scala di idrofobicita\n"		break#leggo la famiglia di proteine da file (txt)	linee = fli.readlines()count = 0for i in xrange(0, len(linee)):	if linee[i].find("DisProt")>0:		count = count +1print count		p = []i, j = 0, 0 #creo una lista di stringhe (ogni stringa e una proteina)for i in xrange(0, len(linee)):	if linee[i].find("DisProt")>0: #riconosco una proteina dall'intestazione		s2=" "	elif linee[i].find("DisProt")<0 and linee[i]!="\n":		s1 = str(linee[i].strip("\n"))		s2 = s2 + s1  #concateno tutte le stringhe di una stessa proteina	elif linee[i] == "\n" and len(s2)!=0:		p.append(s2.strip()) #inserisco la proteina completa in una lista		s2=" "		j = j+1	else: passprint j#associo i valori di idrofobicita ad ogni amminoacido per ogni proteina e creo NN = []for n in xrange(0,len(p)):	nseq = []	for a in xrange(0,len(p[n])):		nseq.append(0)	s = p[n]	i=0		for j in xrange(0,len(s)):		for x in dict.keys():			if x == s[j]:				nseq[i] = float(dict[x])				i=i+1	N.append(nseq)#creo il grafo associto alla SOGLIA per ogni proteina e lo stampo come serie di archii,j,k=0,0,0m = []*len(N)a = []for i in xrange(0,len(N)):	m.append(a)	for j in xrange(0,len(N)):	s=N[j]	prote=[]*len(s)	for k in xrange(0,len(s)):		prote.append([])		a = []		if k < L:			for l in xrange(-L+k,1):				a.append(s[len(s)+l-1])			for l in xrange(0,L+k):				a.append(s[l])		elif k > len(s)-1-L:			for l in xrange(-L,1):				a.append(s[l])			for l in xrange(0,k-len(s)+1+L):				a.append(s[l])		else:			for l in xrange(-L,L+1):				a.append(s[k+l])						for i in xrange(0,len(s)):			d_ki = 0.0			b = []			if i < L:				for l in xrange(-L+i,1):					b.append(s[len(s)+l-1])				for l in xrange(0,L+i):					b.append(s[l])			elif i > len(s)-1-L:				for l in xrange(-L,1):					b.append(s[l])				for l in xrange(0,i-len(s)+1+L):					b.append(s[l])			else:				for l in xrange(-L,L+1):					b.append(s[i+l])						for d in xrange(-L, L+1):				d_ki += float(a[d]-b[d])**2			d_ki = math.sqrt(d_ki)			#print d_ki			if d_ki < SOGLIA and k!=i:				prote[k].append(1) #la matrice la faccio quadrata per tutti gli elementi			else: prote[k].append(0)	m.append(prote)#associo 1 o 0 alla presenza del link in una proteina e stampo la matrice quadrata corrispondenteflo.write("#Matrici: soglia idrofobicita = %f" % SOGLIA)for x in m:	for y in x:		for z in y:			num = repr(z)			flo.write(num)		flo.write("\n")	flo.write("\n")fli.close()fscale.close()flo.close()